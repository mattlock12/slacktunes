version: "3"
services:

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/dev/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - slacktunes

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: password
    tty: true
    volumes:
      - ./database-init.sql:/docker-entrypoint-initdb.d/databases.sql
      - "dbdata:/var/lib/postgresql/data"

  redis:
    container_name: redisbroker
    image: redis
    restart: always

  celeryworker:
    build: ./
    restart: always
    depends_on:
      - redis
    env_file:
      - dev.env
    command: celery -A src.tasks worker --loglevel=info

  slacktunes:
    build: ./
    restart: always
    container_name: slacktunes_backend
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
    env_file:
      - dev.env
    tty: true
    ports:
      - 8080:8080
    command: /bin/bash -c './startup.sh && gunicorn -b 0.0.0.0:8080 application:application'

volumes:
  dbdata: